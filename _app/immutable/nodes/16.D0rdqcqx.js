import"../chunks/CWj6FrbW.js";import"../chunks/BI6GKTXo.js";import{h as St,i as At,s as r,j as t,l as n,t as T,n as o,k as e}from"../chunks/DrL5zuWN.js";import{P as qt}from"../chunks/DcX_zRd6.js";import"../chunks/Be3xNqll.js";import{L as E}from"../chunks/CtMVwxKR.js";var Bt=St(`<p>Each view has its own keymaps, listed below. At any time (from within <code></code>'s main window) you can use <code></code> to show a "help" window that lists all of them.</p> <p>The help window itself has only 1 mapping: it can be closed with <code></code>.</p> <table><thead><tr><th>Key</th><th>Action</th></tr></thead><tbody><tr><td><strong>Threads</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a frame</td></tr><tr><td><code></code></td><td>Toggle subtle frames</td></tr><tr><td><code></code></td><td>Filter frames (via Lua patterns<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>)</td></tr><tr><td><code></code></td><td>Omit results matching filter (invert filter)</td></tr><tr><td><strong>Scopes</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Trigger actions</td></tr><tr><td><strong>Breakpoints</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a breakpoint</td></tr><tr><td><code></code></td><td>Delete a breakpoint</td></tr><tr><td><strong>Watches</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Insert an expression</td></tr><tr><td><code></code></td><td>Delete an expression</td></tr><tr><td><code></code></td><td>Edit an expression</td></tr><tr><td><code></code></td><td>Copy the value of an expression or variable</td></tr><tr><td><code></code></td><td>Set the value of an expression or variable</td></tr><tr><td><strong>Exceptions</strong></td><td></td></tr><tr><td><code></code></td><td>Toggle filter</td></tr><tr><td><strong>Sessions</strong></td><td></td></tr><tr><td><code></code></td><td>Switch to a session</td></tr><tr><td><strong>Help</strong></td><td></td></tr><tr><td><code></code></td><td>Close</td></tr></tbody></table> <p><code></code> doesn't define any keybindings outside its own buffers: you have to create your own bindings to call <code></code>, <code></code> or <code></code> and other API <!> (or <!>).</p> <section data-footnotes="" class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2> <ol><li id="user-content-fn-1"><p>Read <code></code> to learn more. You can also read the full documentation <!>. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">â†©</a></p></li></ol></section>`,1);function Ot(st){const ct={pageType:"md",lastUpdate:"2025/08/11 21:43:36",anchors:[],title:"Keymaps"};qt(st,{get fm(){return ct},children:(lt,Dt)=>{var L=Bt(),s=At(L),P=r(t(s));P.textContent="nvim-dap-view";var vt=r(P,2);vt.textContent="g?",o(),e(s);var c=r(s,2),it=r(t(c));it.textContent="q",o(),e(c);var l=r(c,2),S=r(t(l)),v=r(t(S)),A=t(v),_t=t(A);_t.textContent="<CR>",e(A),o(),e(v);var i=r(v),q=t(i),pt=t(q);pt.textContent="t",e(q),o(),e(i);var _=r(i),B=t(_),ft=t(B);ft.textContent="f",e(B),o(),e(_);var p=r(_),D=t(p),ht=t(D);ht.textContent="o",e(D),o(),e(p);var f=r(p,2),F=t(f),mt=t(F);mt.textContent="<CR>",e(F),o(),e(f);var h=r(f),I=t(h),xt=t(I);xt.textContent="o",e(I),o(),e(h);var m=r(h,2),J=t(m),bt=t(J);bt.textContent="<CR>",e(J),o(),e(m);var x=r(m),K=t(x),gt=t(K);gt.textContent="d",e(K),o(),e(x);var b=r(x,2),j=t(b),ut=t(j);ut.textContent="<CR>",e(j),o(),e(b);var g=r(b),H=t(g),Ct=t(H);Ct.textContent="i",e(H),o(),e(g);var u=r(g),O=t(u),wt=t(O);wt.textContent="d",e(O),o(),e(u);var C=r(u),U=t(C),yt=t(U);yt.textContent="e",e(U),o(),e(C);var w=r(C),W=t(w),Rt=t(W);Rt.textContent="c",e(W),o(),e(w);var y=r(w),Y=t(y),$t=t(Y);$t.textContent="s",e(Y),o(),e(y);var R=r(y,2),z=t(R),kt=t(z);kt.textContent="<CR>",e(z),o(),e(R);var $=r(R,2),G=t($),Tt=t(G);Tt.textContent="<CR>",e(G),o(),e($);var M=r($,2),N=t(M),Et=t(N);Et.textContent="q",e(N),o(),e(M),e(S),e(l);var k=r(l,2),Q=t(k);Q.textContent="nvim-dap-view";var V=r(Q,2);V.textContent="open";var X=r(V,2);X.textContent="close";var Z=r(X,2);Z.textContent="toggle";var tt=r(Z,2);E(tt,{to:"api",labelRenderer:d=>{o();var a=T("functions");n(d,a)},$$slots:{labelRenderer:!0}});var Lt=r(tt,2);E(Lt,{to:"commands",labelRenderer:d=>{o();var a=T("commands");n(d,a)},$$slots:{labelRenderer:!0}}),o(),e(k);var et=r(k,2),rt=r(t(et),2),ot=t(rt),dt=t(ot),at=r(t(dt));at.textContent=":help lua-pattern";var Pt=r(at,2);E(Pt,{to:"https://www.lua.org/pil/20.2.html",labelRenderer:d=>{o();var a=T("here");n(d,a)},$$slots:{labelRenderer:!0}}),o(2),e(dt),e(ot),e(rt),e(et),n(lt,L)},$$slots:{default:!0}})}export{Ot as component};
