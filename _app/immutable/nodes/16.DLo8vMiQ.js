import"../chunks/CWj6FrbW.js";import"../chunks/D88tArNk.js";import{h as Ut,i as Wt,s as r,j as t,l as n,t as P,n as o,k as e}from"../chunks/DXh3HsR8.js";import{P as Yt}from"../chunks/CrNirmmT.js";import"../chunks/B6GYFdM_.js";import{L as A}from"../chunks/DkEVGc24.js";var zt=Ut(`<p>Besides the keymaps to change the views, each view has its own keymaps, listed below. At any time (from within <code></code>'s main window) you can use <code></code> to show a "help" window that lists all of them.</p> <p>There are also some default keybindings for navigating to other views.</p> <p>The help window itself has only 1 mapping: it can be closed with <code></code>.</p> <table><thead><tr><th>Key</th><th>Action</th></tr></thead><tbody><tr><td><strong>Threads</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a frame</td></tr><tr><td><code></code></td><td>Toggle subtle frames</td></tr><tr><td><code></code></td><td>Filter frames (via Lua patterns<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>)</td></tr><tr><td><code></code></td><td>Omit results matching filter (invert filter)</td></tr><tr><td><strong>Scopes</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Trigger actions</td></tr><tr><td><code></code></td><td>Set the value of an expression</td></tr><tr><td><strong>Breakpoints</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a breakpoint</td></tr><tr><td><code></code></td><td>Delete a breakpoint</td></tr><tr><td><strong>Watches</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Insert an expression</td></tr><tr><td><code></code></td><td>Delete an expression</td></tr><tr><td><code></code></td><td>Edit an expression</td></tr><tr><td><code></code></td><td>Copy the value of an expression or variable</td></tr><tr><td><code></code></td><td>Set the value of an expression or variable</td></tr><tr><td><strong>Exceptions</strong></td><td></td></tr><tr><td><code></code></td><td>Toggle filter</td></tr><tr><td><strong>Sessions</strong></td><td></td></tr><tr><td><code></code></td><td>Switch to a session</td></tr><tr><td><strong>Navigation</strong></td><td></td></tr><tr><td><code></code></td><td>Go to next view</td></tr><tr><td><code></code></td><td>Go to previous view</td></tr><tr><td><code></code></td><td>Go to first view</td></tr><tr><td><code></code></td><td>Go to last view</td></tr><tr><td><strong>Help</strong></td><td></td></tr><tr><td><code></code></td><td>Close</td></tr></tbody></table> <p><code></code> doesn't define any keybindings outside its own buffers: you have to create your own bindings to call <code></code>, <code></code> or <code></code> and other API <!> (or <!>).</p> <section data-footnotes="" class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2> <ol><li id="user-content-fn-1"><p>Read <code></code> to learn more. You can also read the full documentation <!>. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">â†©</a></p></li></ol></section>`,1);function oe(mt){const gt={pageType:"md",lastUpdate:"2025/08/24 23:39:10",anchors:[],title:"Keymaps"};Yt(mt,{get fm(){return gt},children:(Ct,Mt)=>{var B=zt(),s=Wt(B),q=r(t(s));q.textContent="nvim-dap-view";var bt=r(q,2);bt.textContent="g?",o(),e(s);var c=r(s,4),ut=r(t(c));ut.textContent="q",o(),e(c);var v=r(c,2),D=r(t(v)),i=r(t(D)),F=t(i),wt=t(F);wt.textContent="<CR>",e(F),o(),e(i);var l=r(i),I=t(l),yt=t(I);yt.textContent="t",e(I),o(),e(l);var _=r(l),J=t(_),Rt=t(J);Rt.textContent="f",e(J),o(),e(_);var p=r(_),K=t(p),kt=t(K);kt.textContent="o",e(K),o(),e(p);var f=r(p,2),V=t(f),$t=t(V);$t.textContent="<CR>",e(V),o(),e(f);var h=r(f),j=t(h),Tt=t(j);Tt.textContent="o",e(j),o(),e(h);var x=r(h),H=t(x),St=t(H);St.textContent="s",e(H),o(),e(x);var m=r(x,2),N=t(m),Et=t(N);Et.textContent="<CR>",e(N),o(),e(m);var g=r(m),O=t(g),Gt=t(O);Gt.textContent="d",e(O),o(),e(g);var C=r(g,2),U=t(C),Lt=t(U);Lt.textContent="<CR>",e(U),o(),e(C);var b=r(C),W=t(b),Pt=t(W);Pt.textContent="i",e(W),o(),e(b);var u=r(b),Y=t(u),At=t(Y);At.textContent="d",e(Y),o(),e(u);var w=r(u),z=t(w),Bt=t(z);Bt.textContent="e",e(z),o(),e(w);var y=r(w),M=t(y),qt=t(M);qt.textContent="c",e(M),o(),e(y);var R=r(y),Q=t(R),Dt=t(Q);Dt.textContent="s",e(Q),o(),e(R);var k=r(R,2),X=t(k),Ft=t(X);Ft.textContent="<CR>",e(X),o(),e(k);var $=r(k,2),Z=t($),It=t(Z);It.textContent="<CR>",e(Z),o(),e($);var T=r($,2),tt=t(T),Jt=t(tt);Jt.textContent="]v",e(tt),o(),e(T);var S=r(T),et=t(S),Kt=t(et);Kt.textContent="[v",e(et),o(),e(S);var E=r(S),rt=t(E),Vt=t(rt);Vt.textContent="[V",e(rt),o(),e(E);var G=r(E),ot=t(G),jt=t(ot);jt.textContent="]V",e(ot),o(),e(G);var dt=r(G,2),at=t(dt),Ht=t(at);Ht.textContent="q",e(at),o(),e(dt),e(D),e(v);var L=r(v,2),nt=t(L);nt.textContent="nvim-dap-view";var st=r(nt,2);st.textContent="open";var ct=r(st,2);ct.textContent="close";var vt=r(ct,2);vt.textContent="toggle";var it=r(vt,2);A(it,{to:"api",labelRenderer:d=>{o();var a=P("functions");n(d,a)},$$slots:{labelRenderer:!0}});var Nt=r(it,2);A(Nt,{to:"commands",labelRenderer:d=>{o();var a=P("commands");n(d,a)},$$slots:{labelRenderer:!0}}),o(),e(L);var lt=r(L,2),_t=r(t(lt),2),pt=t(_t),ft=t(pt),ht=r(t(ft));ht.textContent=":help lua-pattern";var Ot=r(ht,2);A(Ot,{to:"https://www.lua.org/pil/20.2.html",labelRenderer:d=>{o();var a=P("here");n(d,a)},$$slots:{labelRenderer:!0}}),o(2),e(ft),e(pt),e(_t),e(lt),n(Ct,B)},$$slots:{default:!0}})}export{oe as component};
