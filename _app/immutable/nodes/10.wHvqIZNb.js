import"../chunks/CWj6FrbW.js";import"../chunks/n3GgL-qX.js";import{h as T,s,i as Z,l as d,t as f,j as a,n,k as e}from"../chunks/B0n5gSMl.js";import{P as z,C as A}from"../chunks/CX46u9_-.js";import"../chunks/BXPBJgyP.js";import{L as _}from"../chunks/BYclXRSA.js";var L=T(`<img src="https://github.com/user-attachments/assets/97ed9e8c-20a0-4355-bb00-5199c7b3cd59" alt="disassembly view"/> <p>The disassembly view is a <!>, built on top of <!>. To enable it, <strong>you need to install nvim-dap-disasm</strong>. After installing the extension, add it to your <code></code> table:</p> <div class="svp-code-block-wrapper"><div class="svp-code-block"><pre class="shiki shiki-themes catppuccin-mocha catppuccin-mocha" style="background-color:#1e1e2e;--shiki-dark-bg:#1e1e2e;color:#cdd6f4;--shiki-dark:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">return</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    winbar </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        sections </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">            "disassembly"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#F38BA8;--shiki-dark:#F38BA8">            ...</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;</span></span></code></pre> <div class="svp-code-block--lang">lua</div> <!></div></div> <div class="admonition admonition-note"><div class="admonition-heading"><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="currentColor" d="M7 17h2.1l6-5.95l-2.15-2.15L7 14.85Zm8.8-6.65l1.05-1.1Q17 9.1 17 8.9q0-.2-.15-.35l-1.4-1.4Q15.3 7 15.1 7q-.2 0-.35.15l-1.1 1.05ZM5 21q-.825 0-1.413-.587Q3 19.825 3 19V5q0-.825.587-1.413Q4.175 3 5 3h4.2q.325-.9 1.088-1.45Q11.05 1 12 1t1.713.55Q14.475 2.1 14.8 3H19q.825 0 1.413.587Q21 4.175 21 5v14q0 .825-.587 1.413Q19.825 21 19 21Zm0-2h14V5H5v14Zm7-14.75q.325 0 .538-.213q.212-.212.212-.537q0-.325-.212-.538q-.213-.212-.538-.212q-.325 0-.537.212q-.213.213-.213.538q0 .325.213.537q.212.213.537.213ZM5 19V5v14Z"></path></svg></span>NOTE</div><div class="admonition-content"><p>If using <code></code> (or any means of lazy loading, in general), make sure to add <code></code> as a dependency for <code></code> and <strong>NOT</strong> the other way around. That's necessary for <code></code> to recognize <code></code>'s installation. A sample (<code></code>'s) spec would be:</p></div></div> <div class="svp-code-block-wrapper"><div class="svp-code-block"><pre class="shiki shiki-themes catppuccin-mocha catppuccin-mocha" style="background-color:#1e1e2e;--shiki-dark-bg:#1e1e2e;color:#cdd6f4;--shiki-dark:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">return</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    &#123;</span></span>
<span class="line"><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">        "Jorenar/nvim-dap-disasm"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        dependencies </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1"> "igorlfs/nvim-dap-view"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        config </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#F38BA8;--shiki-dark:#F38BA8"> true</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;</span></span></code></pre> <div class="svp-code-block--lang">lua</div> <!></div></div>`,1);function j(w){const x={pageType:"md",lastUpdate:"2025/09/13 01:04:27",anchors:[],title:"Disassembly View"};z(w,{get fm(){return x},children:(q,V)=>{var p=L(),i=s(Z(p),2),c=s(a(i));_(c,{to:"custom-views",labelRenderer:r=>{n();var t=f("custom view");d(r,t)},$$slots:{labelRenderer:!0}});var D=s(c,2);_(D,{to:"https://github.com/Jorenar/nvim-dap-disasm",labelRenderer:r=>{n();var t=f("nvim-dap-disasm");d(r,t)},$$slots:{labelRenderer:!0}});var E=s(D,4);E.textContent="winbar.sections",n(),e(i);var o=s(i,2),k=a(o),B=s(a(k),4);A(B,{}),e(k),e(o);var l=s(o,2),v=s(a(l)),h=a(v),m=s(a(h));m.textContent="lazy.nvim";var C=s(m,2);C.textContent="nvim-dap-view";var y=s(C,2);y.textContent="nvim-dap-disasm";var F=s(y,4);F.textContent="nvim-dap-disasm";var b=s(F,2);b.textContent="nvim-dap-view";var $=s(b,2);$.textContent="lazy.nvim",n(),e(h),e(v),e(l);var g=s(l,2),u=a(g),Q=s(a(u),4);A(Q,{}),e(u),e(g),d(q,p)},$$slots:{default:!0}})}export{j as component};
