import"../chunks/CWj6FrbW.js";import"../chunks/BVQDfOf6.js";import{h as x,i as B,j as a,s,l as y,t as _,n as t,k as e}from"../chunks/xLGiGfZ5.js";import{P as $,C as T}from"../chunks/C4ZHNzRg.js";import"../chunks/CxLqtkgH.js";import{L as q}from"../chunks/Bi9Fgv8z.js";var I=x(`<p><code></code> sets the following filetypes:</p> <table><thead><tr><th>Buffer</th><th>Filetype</th></tr></thead><tbody><tr><td>Breakpoints, Exceptions, Sessions, Scopes, Threads, Watches</td><td>dap-view</td></tr><tr><td>Terminal</td><td>dap-view-term</td></tr><tr><td>Help</td><td>dap-view-help</td></tr></tbody></table> <p>They can be used to override buffer and window options set by <code></code>.</p> <p>If the REPL is enabled, the <code></code> filetype (which is set by <code></code>) is also used. <strong>If you wish to consistently override the plugin's behavior, be sure to also include the <code></code> filetype</strong> in your autocmd. If you also have a <!> enabled, ensure its filetype is also added to your autocmd.</p> <div id="Example-Autocmd" class="svp-anchor-item"></div> <h2><a href="#Example-Autocmd" class="svp-title-anchor" aria-label="Example Autocmd"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 512 512"><path d="M280 341.1l-1.2.1c-3.6.4-7 2-9.6 4.5l-64.6 64.6c-13.7 13.7-32 21.2-51.5 21.2s-37.8-7.5-51.5-21.2c-13.7-13.7-21.2-32-21.2-51.5s7.5-37.8 21.2-51.5l68.6-68.6c3.5-3.5 7.3-6.6 11.4-9.3 4.6-3 9.6-5.6 14.8-7.5 4.8-1.8 9.9-3 15-3.7 3.4-.5 6.9-.7 10.2-.7 1.4 0 2.8.1 4.6.2 17.7 1.1 34.4 8.6 46.8 21 7.7 7.7 13.6 17.1 17.1 27.3 2.8 8 11.2 12.5 19.3 10.1.1 0 .2-.1.3-.1.1 0 .2 0 .2-.1 8.1-2.5 12.8-11 10.5-19.1-4.4-15.6-12.2-28.7-24.6-41-15.6-15.6-35.9-25.8-57.6-29.3-1.9-.3-3.8-.6-5.7-.8-3.7-.4-7.4-.6-11.1-.6-2.6 0-5.2.1-7.7.3-5.4.4-10.8 1.2-16.2 2.5-1.1.2-2.1.5-3.2.8-6.7 1.8-13.3 4.2-19.5 7.3-10.3 5.1-19.6 11.7-27.7 19.9l-68.6 68.6C58.9 304.4 48 330.8 48 359c0 28.2 10.9 54.6 30.7 74.4C98.5 453.1 124.9 464 153 464c28.2 0 54.6-10.9 74.4-30.7l65.3-65.3c10.4-10.5 2-28.3-12.7-26.9z" fill="currentColor"></path><path d="M433.3 78.7C413.5 58.9 387.1 48 359 48s-54.6 10.9-74.4 30.7l-63.7 63.7c-9.7 9.7-3.6 26.3 10.1 27.4 4.7.4 9.3-1.3 12.7-4.6l63.8-63.6c13.7-13.7 32-21.2 51.5-21.2s37.8 7.5 51.5 21.2c13.7 13.7 21.2 32 21.2 51.5s-7.5 37.8-21.2 51.5l-68.6 68.6c-3.5 3.5-7.3 6.6-11.4 9.3-4.6 3-9.6 5.6-14.8 7.5-4.8 1.8-9.9 3-15 3.7-3.4.5-6.9.7-10.2.7-1.4 0-2.9-.1-4.6-.2-17.7-1.1-34.4-8.6-46.8-21-7.3-7.3-12.8-16-16.4-25.5-2.9-7.7-11.1-11.9-19.1-9.8-8.9 2.3-14.1 11.7-11.3 20.5 4.5 14 12.1 25.9 23.7 37.5l.2.2c16.9 16.9 39.4 27.6 63.3 30.1 3.7.4 7.4.6 11.1.6 2.6 0 5.2-.1 7.8-.3 6.5-.5 13-1.6 19.3-3.2 6.7-1.8 13.3-4.2 19.5-7.3 10.3-5.1 19.6-11.7 27.7-19.9l68.6-68.6c19.8-19.8 30.7-46.2 30.7-74.4s-11.1-54.6-30.9-74.4z" fill="currentColor"></path></svg></a>Example Autocmd</h2> <p>Map <code></code> to quit in <code></code> filetypes:</p> <div class="svp-code-block-wrapper"><div class="svp-code-block"><pre class="shiki shiki-themes catppuccin-mocha catppuccin-mocha" style="background-color:#1e1e2e;--shiki-dark-bg:#1e1e2e;color:#cdd6f4;--shiki-dark:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">vim.api.</span><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic">nvim_create_autocmd</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">(&#123; </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"FileType" </span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;, &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    pattern </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123; </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"dap-view"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">, </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"dap-view-term"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">, </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"dap-repl" </span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;, </span><span style="color:#6C7086;font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic">-- dap-repl is set by \`nvim-dap\`</span></span>
<span class="line"><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic">    callback</span><span style="color:#94E2D5;--shiki-dark:#94E2D5"> =</span><span style="color:#CBA6F7;--shiki-dark:#CBA6F7"> function</span><span style="color:#9399B2;--shiki-dark:#9399B2">(</span><span style="color:#EBA0AC;font-style:italic;--shiki-dark:#EBA0AC;--shiki-dark-font-style:italic">args</span><span style="color:#9399B2;--shiki-dark:#9399B2">)</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        vim.keymap.</span><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic">set</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">(</span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"n"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">, </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"q"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">, </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"&#x3C;C-w>q"</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">, &#123; buffer </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> args.buf &#125;)</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">    end</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;)</span></span></code></pre> <div class="svp-code-block--lang">lua</div> <!></div></div>`,1);function U(v){const C={pageType:"md",lastUpdate:"2025/09/10 04:31:20",anchors:[{slugId:"Example-Autocmd",title:"Example Autocmd",depth:2}],title:"Filetypes & Autocmds"};$(v,{get fm(){return C},children:(m,L)=>{var p=I(),i=B(p),A=a(i);A.textContent="nvim-dap-view",t(),e(i);var o=s(i,4),F=s(a(o));F.textContent="nvim-dap-view",t(),e(o);var l=s(o,2),d=s(a(l));d.textContent="dap-repl";var c=s(d,2);c.textContent="nvim-dap";var r=s(c,2),f=s(a(r));f.textContent="dap-repl",t(),e(r);var u=s(r,2);q(u,{to:"custom-views",labelRenderer:w=>{t();var g=_("custom view");y(w,g)},$$slots:{labelRenderer:!0}}),t(),e(l);var n=s(l,6),k=s(a(n));k.textContent="q";var E=s(k,2);E.textContent="nvim-dap-view",t(),e(n);var h=s(n,2),D=a(h),b=s(a(D),4);T(b,{}),e(D),e(h),y(m,p)},$$slots:{default:!0}})}export{U as component};
