import"../chunks/CWj6FrbW.js";import"../chunks/B4NBackR.js";import{h as z,i as H,s,l as A,t as M,j as a,n as e,k as n}from"../chunks/B56O9w-_.js";import{P as U,C as B}from"../chunks/NJpJ0uDk.js";import"../chunks/NKt_jEyI.js";import{L as j}from"../chunks/BHGKRyeR.js";var q=z(`<p>Some debug adapters don't use the integrated terminal (aka "console"). To avoid having a completely useless window lying around, you can hide the terminal by adding the following snippet to your <code></code> setup:</p> <div class="svp-code-block-wrapper"><div class="svp-code-block"><pre class="shiki shiki-themes catppuccin-mocha catppuccin-mocha" style="background-color:#1e1e2e;--shiki-dark-bg:#1e1e2e;color:#cdd6f4;--shiki-dark:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">return</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    windows </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        terminal </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#6C7086;font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic">            -- Use the actual names for the adapters you want to hide</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">            hide </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123; </span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1">"delve" </span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;, </span><span style="color:#6C7086;font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic">-- \`delve\` is known to not use the terminal.</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">        &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;</span></span></code></pre> <div class="svp-code-block--lang">lua</div> <!></div></div> <div id="Anchoring" class="svp-anchor-item"></div> <h2><a href="#Anchoring" class="svp-title-anchor" aria-label="Anchoring"><svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 512 512"><path d="M280 341.1l-1.2.1c-3.6.4-7 2-9.6 4.5l-64.6 64.6c-13.7 13.7-32 21.2-51.5 21.2s-37.8-7.5-51.5-21.2c-13.7-13.7-21.2-32-21.2-51.5s7.5-37.8 21.2-51.5l68.6-68.6c3.5-3.5 7.3-6.6 11.4-9.3 4.6-3 9.6-5.6 14.8-7.5 4.8-1.8 9.9-3 15-3.7 3.4-.5 6.9-.7 10.2-.7 1.4 0 2.8.1 4.6.2 17.7 1.1 34.4 8.6 46.8 21 7.7 7.7 13.6 17.1 17.1 27.3 2.8 8 11.2 12.5 19.3 10.1.1 0 .2-.1.3-.1.1 0 .2 0 .2-.1 8.1-2.5 12.8-11 10.5-19.1-4.4-15.6-12.2-28.7-24.6-41-15.6-15.6-35.9-25.8-57.6-29.3-1.9-.3-3.8-.6-5.7-.8-3.7-.4-7.4-.6-11.1-.6-2.6 0-5.2.1-7.7.3-5.4.4-10.8 1.2-16.2 2.5-1.1.2-2.1.5-3.2.8-6.7 1.8-13.3 4.2-19.5 7.3-10.3 5.1-19.6 11.7-27.7 19.9l-68.6 68.6C58.9 304.4 48 330.8 48 359c0 28.2 10.9 54.6 30.7 74.4C98.5 453.1 124.9 464 153 464c28.2 0 54.6-10.9 74.4-30.7l65.3-65.3c10.4-10.5 2-28.3-12.7-26.9z" fill="currentColor"></path><path d="M433.3 78.7C413.5 58.9 387.1 48 359 48s-54.6 10.9-74.4 30.7l-63.7 63.7c-9.7 9.7-3.6 26.3 10.1 27.4 4.7.4 9.3-1.3 12.7-4.6l63.8-63.6c13.7-13.7 32-21.2 51.5-21.2s37.8 7.5 51.5 21.2c13.7 13.7 21.2 32 21.2 51.5s-7.5 37.8-21.2 51.5l-68.6 68.6c-3.5 3.5-7.3 6.6-11.4 9.3-4.6 3-9.6 5.6-14.8 7.5-4.8 1.8-9.9 3-15 3.7-3.4.5-6.9.7-10.2.7-1.4 0-2.9-.1-4.6-.2-17.7-1.1-34.4-8.6-46.8-21-7.3-7.3-12.8-16-16.4-25.5-2.9-7.7-11.1-11.9-19.1-9.8-8.9 2.3-14.1 11.7-11.3 20.5 4.5 14 12.1 25.9 23.7 37.5l.2.2c16.9 16.9 39.4 27.6 63.3 30.1 3.7.4 7.4.6 11.1.6 2.6 0 5.2-.1 7.8-.3 6.5-.5 13-1.6 19.3-3.2 6.7-1.8 13.3-4.2 19.5-7.3 10.3-5.1 19.6-11.7 27.7-19.9l68.6-68.6c19.8-19.8 30.7-46.2 30.7-74.4s-11.1-54.6-30.9-74.4z" fill="currentColor"></path></svg></a>Anchoring</h2> <p>In some scenarios, it's useful to use another window as if it was <code></code>'s terminal. By doing that, <code></code>'s main window will "follow" another window. Watch this <!> to see what this looks like.</p> <p>One such scenario is when using the <code></code> adapter for Go (more specifically, when using an <code></code> request): the window with the terminal that launched <code></code> can act as if it was <code></code>'s terminal window. In the context of <code></code>, that's useful, because the <code></code> process will behave as if it was the terminal (receiving input, displaying output, etc).</p> <p>To achieve that, in addition to hiding the terminal for <code></code> (see above), you have to create your own <code></code> function that returns a window number (or <code></code>), which is used to mark the anchor window. If <code></code> is returned, there's a fallback to the default behavior. Here's a simple function you can use:</p> <div class="svp-code-block-wrapper"><div class="svp-code-block"><pre class="shiki shiki-themes catppuccin-mocha catppuccin-mocha" style="background-color:#1e1e2e;--shiki-dark-bg:#1e1e2e;color:#cdd6f4;--shiki-dark:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">return</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    windows </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic">        anchor</span><span style="color:#94E2D5;--shiki-dark:#94E2D5"> =</span><span style="color:#CBA6F7;--shiki-dark:#CBA6F7"> function</span><span style="color:#9399B2;--shiki-dark:#9399B2">()</span></span>
<span class="line"><span style="color:#6C7086;font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic">            -- Anchor to the first terminal window found in the current tab</span></span>
<span class="line"><span style="color:#6C7086;font-style:italic;--shiki-dark:#6C7086;--shiki-dark-font-style:italic">            -- Tweak according to your needs</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">            local</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> windows </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> vim.api.</span><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic">nvim_tabpage_list_wins</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">(</span><span style="color:#FAB387;--shiki-dark:#FAB387">0</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">            for</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> _, win </span><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">in</span><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic"> ipairs</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">(windows) </span><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">do</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">                local</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> bufnr </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">=</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> vim.api.</span><span style="color:#89B4FA;font-style:italic;--shiki-dark:#89B4FA;--shiki-dark-font-style:italic">nvim_win_get_buf</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">(win)</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">                if</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> vim.bo[bufnr].buftype </span><span style="color:#94E2D5;--shiki-dark:#94E2D5">==</span><span style="color:#A6E3A1;--shiki-dark:#A6E3A1"> "terminal" </span><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">then</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">                    return</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4"> win</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">                end</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">            end</span></span>
<span class="line"><span style="color:#CBA6F7;--shiki-dark:#CBA6F7">        end</span><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">    &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4;--shiki-dark:#CDD6F4">&#125;</span></span></code></pre> <div class="svp-code-block--lang">lua</div> <!></div></div>`,1);function V(g){const b={pageType:"md",lastUpdate:"2025/10/03 03:45:27",anchors:[{slugId:"Anchoring",title:"Anchoring",depth:2}],title:"Hide Terminal"};U(g,{get fm(){return b},children:(_,G)=>{var c=q(),i=H(c),x=s(a(i));x.textContent="nvim-dap-view",e(),n(i);var o=s(i,2),p=a(o),E=s(a(p),4);B(E,{}),n(p),n(o);var t=s(o,6),d=s(a(t));d.textContent="nvim-dap-view";var k=s(d,2);k.textContent="nvim-dap-view";var $=s(k,2);j($,{to:"https://github.com/user-attachments/assets/5dce4b3d-fc01-4be6-9a72-b0f969e34b14",labelRenderer:P=>{e();var R=M("video");A(P,R)},$$slots:{labelRenderer:!0}}),e(),n(t);var l=s(t,2),h=s(a(l));h.textContent="delve";var D=s(h,2);D.textContent="attach";var C=s(D,2);C.textContent="dlv";var y=s(C,2);y.textContent="nvim-dap-view";var F=s(y,2);F.textContent="delve";var T=s(F,2);T.textContent="dlv",e(),n(l);var r=s(l,2),v=s(a(r));v.textContent="delve";var u=s(v,2);u.textContent="anchor";var f=s(u,2);f.textContent="nil";var I=s(f,2);I.textContent="nil",e(),n(r);var m=s(r,2),w=a(m),L=s(a(w),4);B(L,{}),n(w),n(m),A(_,c)},$$slots:{default:!0}})}export{V as component};
