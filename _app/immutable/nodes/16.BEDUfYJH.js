import"../chunks/CWj6FrbW.js";import"../chunks/n3GgL-qX.js";import{h as Xt,i as Zt,s as r,j as t,l as n,t as B,n as d,k as e}from"../chunks/B0n5gSMl.js";import{P as te}from"../chunks/D5KEcfsI.js";import"../chunks/CzFCejHG.js";import{L as q}from"../chunks/BPvVuYO_.js";var ee=Xt(`<p>Besides the keymaps to change the views, each view has its own keymaps, listed below. At any time (from within <code></code>'s main window) you can use <code></code> to show a "help" window that lists all of them.</p> <p>There are also some default keybindings for navigating to other views.</p> <p>The help window itself has only 1 mapping: it can be closed with <code></code>.</p> <table><thead><tr><th>Key</th><th>Action</th></tr></thead><tbody><tr><td><strong>Threads</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a frame</td></tr><tr><td><code></code></td><td>Toggle subtle frames</td></tr><tr><td><code></code></td><td>Filter frames (via Lua patterns<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>)</td></tr><tr><td><code></code></td><td>Omit results matching filter (invert filter)</td></tr><tr><td><strong>Scopes</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Trigger actions</td></tr><tr><td><code></code></td><td>Set the value of an expression</td></tr><tr><td><strong>Breakpoints</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a breakpoint</td></tr><tr><td><code></code></td><td>Delete a breakpoint</td></tr><tr><td><strong>Watches</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Insert an expression</td></tr><tr><td><code></code></td><td>Delete an expression</td></tr><tr><td><code></code></td><td>Edit an expression</td></tr><tr><td><code></code></td><td>Copy the value of an expression or variable</td></tr><tr><td><code></code></td><td>Set the value of an expression or variable</td></tr><tr><td><strong>Exceptions</strong></td><td></td></tr><tr><td><code></code></td><td>Toggle filter</td></tr><tr><td><strong>Sessions</strong></td><td></td></tr><tr><td><code></code></td><td>Switch to a session</td></tr><tr><td><strong>Terminal</strong></td><td></td></tr><tr><td><code></code></td><td>Go to next session</td></tr><tr><td><code></code></td><td>Go to previous session</td></tr><tr><td><strong>Navigation</strong></td><td></td></tr><tr><td><code></code></td><td>Go to next view</td></tr><tr><td><code></code></td><td>Go to previous view</td></tr><tr><td><code></code></td><td>Go to first view</td></tr><tr><td><code></code></td><td>Go to last view</td></tr><tr><td><strong>Help</strong></td><td></td></tr><tr><td><code></code></td><td>Close</td></tr></tbody></table> <p><code></code> doesn't define any keybindings outside its own buffers: you have to create your own bindings to call <code></code>, <code></code> or <code></code> and other API <!> (or <!>).</p> <section data-footnotes="" class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2> <ol><li id="user-content-fn-1"><p>Read <code></code> to learn more. You can also read the full documentation <!>. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">â†©</a></p></li></ol></section>`,1);function ve(bt){const wt={pageType:"md",lastUpdate:"2025/09/12 02:50:24",anchors:[],title:"Keymaps"};te(bt,{get fm(){return wt},children:(yt,re)=>{var D=ee(),s=Zt(D),F=r(t(s));F.textContent="nvim-dap-view";var Rt=r(F,2);Rt.textContent="g?",d(),e(s);var c=r(s,4),kt=r(t(c));kt.textContent="q",d(),e(c);var v=r(c,2),I=r(t(v)),i=r(t(I)),J=t(i),$t=t(J);$t.textContent="<CR>",e(J),d(),e(i);var l=r(i),K=t(l),Tt=t(K);Tt.textContent="t",e(K),d(),e(l);var _=r(l),V=t(_),Gt=t(V);Gt.textContent="f",e(V),d(),e(_);var p=r(_),j=t(p),St=t(j);St.textContent="o",e(j),d(),e(p);var f=r(p,2),H=t(f),Et=t(H);Et.textContent="<CR>",e(H),d(),e(f);var x=r(f),N=t(x),Lt=t(N);Lt.textContent="o",e(N),d(),e(x);var h=r(x),O=t(h),Pt=t(O);Pt.textContent="s",e(O),d(),e(h);var g=r(h,2),U=t(g),At=t(U);At.textContent="<CR>",e(U),d(),e(g);var m=r(g),W=t(m),Bt=t(W);Bt.textContent="d",e(W),d(),e(m);var C=r(m,2),Y=t(C),qt=t(Y);qt.textContent="<CR>",e(Y),d(),e(C);var u=r(C),z=t(u),Dt=t(z);Dt.textContent="i",e(z),d(),e(u);var b=r(u),M=t(b),Ft=t(M);Ft.textContent="d",e(M),d(),e(b);var w=r(b),Q=t(w),It=t(Q);It.textContent="e",e(Q),d(),e(w);var y=r(w),X=t(y),Jt=t(X);Jt.textContent="c",e(X),d(),e(y);var R=r(y),Z=t(R),Kt=t(Z);Kt.textContent="s",e(Z),d(),e(R);var k=r(R,2),tt=t(k),Vt=t(tt);Vt.textContent="<CR>",e(tt),d(),e(k);var $=r(k,2),et=t($),jt=t(et);jt.textContent="<CR>",e(et),d(),e($);var T=r($,2),rt=t(T),Ht=t(rt);Ht.textContent="]s",e(rt),d(),e(T);var G=r(T),dt=t(G),Nt=t(dt);Nt.textContent="[s",e(dt),d(),e(G);var S=r(G,2),ot=t(S),Ot=t(ot);Ot.textContent="]v",e(ot),d(),e(S);var E=r(S),at=t(E),Ut=t(at);Ut.textContent="[v",e(at),d(),e(E);var L=r(E),nt=t(L),Wt=t(nt);Wt.textContent="[V",e(nt),d(),e(L);var P=r(L),st=t(P),Yt=t(st);Yt.textContent="]V",e(st),d(),e(P);var ct=r(P,2),vt=t(ct),zt=t(vt);zt.textContent="q",e(vt),d(),e(ct),e(I),e(v);var A=r(v,2),it=t(A);it.textContent="nvim-dap-view";var lt=r(it,2);lt.textContent="open";var _t=r(lt,2);_t.textContent="close";var pt=r(_t,2);pt.textContent="toggle";var ft=r(pt,2);q(ft,{to:"api",labelRenderer:o=>{d();var a=B("functions");n(o,a)},$$slots:{labelRenderer:!0}});var Mt=r(ft,2);q(Mt,{to:"commands",labelRenderer:o=>{d();var a=B("commands");n(o,a)},$$slots:{labelRenderer:!0}}),d(),e(A);var xt=r(A,2),ht=r(t(xt),2),gt=t(ht),mt=t(gt),Ct=r(t(mt));Ct.textContent=":help lua-pattern";var Qt=r(Ct,2);q(Qt,{to:"https://www.lua.org/pil/20.2.html",labelRenderer:o=>{d();var a=B("here");n(o,a)},$$slots:{labelRenderer:!0}}),d(2),e(mt),e(gt),e(ht),e(xt),n(yt,D)},$$slots:{default:!0}})}export{ve as component};
