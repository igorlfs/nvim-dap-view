import"../chunks/CWj6FrbW.js";import"../chunks/C877zSvH.js";import{h as Bt,i as Dt,s as r,j as t,l as n,t as E,n as o,k as e}from"../chunks/Di_nFkSL.js";import{P as Ft}from"../chunks/C86ynGWE.js";import"../chunks/C6g_7WXv.js";import{L as S}from"../chunks/C_JiWK32.js";var It=Bt(`<p>Each view has its own keymaps, listed below. At any time (from within <code></code>'s main window) you can use <code></code> to show a "help" window that lists all of them.</p> <p>The help window itself has only 1 mapping: it can be closed with <code></code>.</p> <table><thead><tr><th>Key</th><th>Action</th></tr></thead><tbody><tr><td><strong>Threads</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a frame</td></tr><tr><td><code></code></td><td>Toggle subtle frames</td></tr><tr><td><code></code></td><td>Filter frames (via Lua patterns<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup>)</td></tr><tr><td><code></code></td><td>Omit results matching filter (invert filter)</td></tr><tr><td><strong>Scopes</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Trigger actions</td></tr><tr><td><code></code></td><td>Set the value of an expression</td></tr><tr><td><strong>Breakpoints</strong></td><td></td></tr><tr><td><code></code></td><td>Jump to a breakpoint</td></tr><tr><td><code></code></td><td>Delete a breakpoint</td></tr><tr><td><strong>Watches</strong></td><td></td></tr><tr><td><code></code></td><td>Expand or collapse a variable</td></tr><tr><td><code></code></td><td>Insert an expression</td></tr><tr><td><code></code></td><td>Delete an expression</td></tr><tr><td><code></code></td><td>Edit an expression</td></tr><tr><td><code></code></td><td>Copy the value of an expression or variable</td></tr><tr><td><code></code></td><td>Set the value of an expression or variable</td></tr><tr><td><strong>Exceptions</strong></td><td></td></tr><tr><td><code></code></td><td>Toggle filter</td></tr><tr><td><strong>Sessions</strong></td><td></td></tr><tr><td><code></code></td><td>Switch to a session</td></tr><tr><td><strong>Help</strong></td><td></td></tr><tr><td><code></code></td><td>Close</td></tr></tbody></table> <p><code></code> doesn't define any keybindings outside its own buffers: you have to create your own bindings to call <code></code>, <code></code> or <code></code> and other API <!> (or <!>).</p> <section data-footnotes="" class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2> <ol><li id="user-content-fn-1"><p>Read <code></code> to learn more. You can also read the full documentation <!>. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">â†©</a></p></li></ol></section>`,1);function Yt(lt){const vt={pageType:"md",lastUpdate:"2025/08/19 00:22:23",anchors:[],title:"Keymaps"};Ft(lt,{get fm(){return vt},children:(it,Jt)=>{var L=It(),s=Dt(L),P=r(t(s));P.textContent="nvim-dap-view";var _t=r(P,2);_t.textContent="g?",o(),e(s);var c=r(s,2),pt=r(t(c));pt.textContent="q",o(),e(c);var l=r(c,2),A=r(t(l)),v=r(t(A)),q=t(v),ft=t(q);ft.textContent="<CR>",e(q),o(),e(v);var i=r(v),B=t(i),ht=t(B);ht.textContent="t",e(B),o(),e(i);var _=r(i),D=t(_),xt=t(D);xt.textContent="f",e(D),o(),e(_);var p=r(_),F=t(p),mt=t(F);mt.textContent="o",e(F),o(),e(p);var f=r(p,2),I=t(f),bt=t(I);bt.textContent="<CR>",e(I),o(),e(f);var h=r(f),J=t(h),gt=t(J);gt.textContent="o",e(J),o(),e(h);var x=r(h),K=t(x),ut=t(K);ut.textContent="s",e(K),o(),e(x);var m=r(x,2),j=t(m),Ct=t(j);Ct.textContent="<CR>",e(j),o(),e(m);var b=r(m),H=t(b),wt=t(H);wt.textContent="d",e(H),o(),e(b);var g=r(b,2),O=t(g),yt=t(O);yt.textContent="<CR>",e(O),o(),e(g);var u=r(g),U=t(u),Rt=t(U);Rt.textContent="i",e(U),o(),e(u);var C=r(u),W=t(C),$t=t(W);$t.textContent="d",e(W),o(),e(C);var w=r(C),Y=t(w),kt=t(Y);kt.textContent="e",e(Y),o(),e(w);var y=r(w),z=t(y),Tt=t(z);Tt.textContent="c",e(z),o(),e(y);var R=r(y),G=t(R),Et=t(G);Et.textContent="s",e(G),o(),e(R);var $=r(R,2),M=t($),St=t(M);St.textContent="<CR>",e(M),o(),e($);var k=r($,2),N=t(k),Lt=t(N);Lt.textContent="<CR>",e(N),o(),e(k);var Q=r(k,2),V=t(Q),Pt=t(V);Pt.textContent="q",e(V),o(),e(Q),e(A),e(l);var T=r(l,2),X=t(T);X.textContent="nvim-dap-view";var Z=r(X,2);Z.textContent="open";var tt=r(Z,2);tt.textContent="close";var et=r(tt,2);et.textContent="toggle";var rt=r(et,2);S(rt,{to:"api",labelRenderer:d=>{o();var a=E("functions");n(d,a)},$$slots:{labelRenderer:!0}});var At=r(rt,2);S(At,{to:"commands",labelRenderer:d=>{o();var a=E("commands");n(d,a)},$$slots:{labelRenderer:!0}}),o(),e(T);var ot=r(T,2),dt=r(t(ot),2),at=t(dt),nt=t(at),st=r(t(nt));st.textContent=":help lua-pattern";var qt=r(st,2);S(qt,{to:"https://www.lua.org/pil/20.2.html",labelRenderer:d=>{o();var a=E("here");n(d,a)},$$slots:{labelRenderer:!0}}),o(2),e(nt),e(at),e(dt),e(ot),n(it,L)},$$slots:{default:!0}})}export{Yt as component};
