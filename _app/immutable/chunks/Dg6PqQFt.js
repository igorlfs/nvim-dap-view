import{t as n,a as r}from"./BLxlZUrJ.js";import"./CFq3jESr.js";import{s as c,f as i}from"./eUeLa1OZ.js";import{h as d}from"./CT0RkVi8.js";import{l as y,s as m}from"./BNd-5Pst.js";import{M as D}from"./oFaaERDc.js";const a={title:"Filetypes & Autocommands"},{title:w}=a;var f=n('<p><code>nvim-dap-view</code> sets the following filetypes:</p> <table><thead><tr><th>Buffer</th><th>Filetype</th></tr></thead><tbody><tr><td>Breakpoints, Exceptions, Scopes, Threads, Watches</td><td>dap-view</td></tr><tr><td>Terminal</td><td>dap-view-term</td></tr><tr><td>Help</td><td>dap-view-help</td></tr></tbody></table> <p>They can be used to override buffer and window options set by <code>nvim-dap-view</code>.</p> <p>If the REPL is enabled, the <code>dap-repl</code> filetype (which is set by <code>nvim-dap</code>) is also used. <strong>If you wish to consistently override the pluginâ€™s behavior, be sure to also include the <code>dap-repl</code> filetype</strong> in your autocommand.</p> <h2 id="example-autocommand"><a href="#example-autocommand">Example autocommand</a></h2> <p>Map q to quit in <code>nvim-dap-view</code> filetypes:</p> <!>',1);function E(e,t){const o=y(t,["children","$$slots","$$events","$$legacy"]);D(e,m(()=>o,a,{children:(p,h)=>{var s=f(),l=c(i(s),12);d(l,()=>`<pre class="shiki catppuccin-mocha" style="background-color:#1e1e2e;color:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CDD6F4">vim.api.</span><span style="color:#89B4FA;font-style:italic">nvim_create_autocmd</span><span style="color:#CDD6F4">(&#123; </span><span style="color:#A6E3A1">"FileType" </span><span style="color:#CDD6F4">&#125;, &#123;</span></span>
<span class="line"><span style="color:#CDD6F4">    pattern </span><span style="color:#94E2D5">=</span><span style="color:#CDD6F4"> &#123; </span><span style="color:#A6E3A1">"dap-view"</span><span style="color:#CDD6F4">, </span><span style="color:#A6E3A1">"dap-view-term"</span><span style="color:#CDD6F4">, </span><span style="color:#A6E3A1">"dap-repl" </span><span style="color:#CDD6F4">&#125;, </span><span style="color:#6C7086;font-style:italic">-- dap-repl is set by &#96;nvim-dap&#96;</span></span>
<span class="line"><span style="color:#89B4FA;font-style:italic">    callback</span><span style="color:#94E2D5"> =</span><span style="color:#CBA6F7"> function</span><span style="color:#9399B2">(</span><span style="color:#EBA0AC;font-style:italic">evt</span><span style="color:#9399B2">)</span></span>
<span class="line"><span style="color:#CDD6F4">        vim.keymap.</span><span style="color:#89B4FA;font-style:italic">set</span><span style="color:#CDD6F4">(</span><span style="color:#A6E3A1">"n"</span><span style="color:#CDD6F4">, </span><span style="color:#A6E3A1">"q"</span><span style="color:#CDD6F4">, </span><span style="color:#A6E3A1">"&#x3C;C-w>q"</span><span style="color:#CDD6F4">, &#123; buffer </span><span style="color:#94E2D5">=</span><span style="color:#CDD6F4"> evt.buf &#125;)</span></span>
<span class="line"><span style="color:#CBA6F7">    end</span><span style="color:#CDD6F4">,</span></span>
<span class="line"><span style="color:#CDD6F4">&#125;)</span></span></code></pre>`),r(p,s)},$$slots:{default:!0}}))}export{E as default,a as metadata};
