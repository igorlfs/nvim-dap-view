import{t as n,a as r}from"./Dfv75pGZ.js";import"./CTtJk3h0.js";import{l as s,s as c}from"./DpwxDG4K.js";import{M as p}from"./p-YPa1g6.js";const e={title:"Acknowledgements"},{title:b}=e;var m=n(`<ul><li><a href="https://github.com/rcarriga/nvim-dap-ui" rel="nofollow">nvim-dap-ui</a> is obviously a huge inspiration!</li> <li>Code to inject treesitter highlights into line is taken from <a href="https://github.com/stevearc/quicker.nvim" rel="nofollow">quicker.nvim</a></li> <li><a href="https://github.com/lucaSartore/nvim-dap-exception-breakpoints" rel="nofollow">lucaSartore</a> for the inspiration for handling exceptions breakpoint</li> <li><a href="https://github.com/mistweaverco/kulala.nvim" rel="nofollow">Kulala</a> for the creative usage of neovim’s <code>'winbar'</code> to handle multiple “views”</li> <li><a href="https://github.com/Saghen/blink.cmp/blob/main/lua/blink/cmp/config/utils.lua" rel="nofollow">blink.cmp</a> for the config validation (which is partially taken from a PR to <a href="https://github.com/lukas-reineke/indent-blankline.nvim/pull/934/files#diff-09ebcaa8c75cd1e92d25640e377ab261cfecaf8351c9689173fd36c2d0c23d94R16" rel="nofollow">indent-blankline</a>)</li></ul>`);function v(i,t){const l=s(t,["children","$$slots","$$events","$$legacy"]);p(i,c(()=>l,e,{children:(o,f)=>{var a=m();r(o,a)},$$slots:{default:!0}}))}export{v as default,e as metadata};
