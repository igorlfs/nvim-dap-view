import{f as r,a as c}from"./BcDBk0ZM.js";import"./DxUuYnVR.js";import{s as p,f as l,n as d}from"./BRMmbz-l.js";import{h}from"./C8edfgHr.js";import{l as f,s as m}from"./Bjp0du-b.js";import{M as u}from"./URzjNw8u.js";const a={title:"NVIM DAP View"},{title:D}=a;var v=r(`<blockquote><p>Modern, minimalistic debugging UI for neovim</p></blockquote> <video controls width="100%"><source src="https://github.com/user-attachments/assets/01c461f7-b77b-4232-bed5-4630f3e7c039" type="video/webm"/> <track kind="captions"/></video> <h2 id="installation"><a href="#installation">Installation</a></h2> <p><strong>Requires neovim 0.11+</strong></p> <p>A nerd font is a soft requirement.</p> <h3 id="via-lazynvim"><a href="#via-lazynvim">Via lazy.nvim</a></h3> <!> <p>For a better experience, consider adding <code>nvim-dap-view</code> <strong>as a dependency</strong> for <code>nvim-dap</code>. <a href="faq#why-add-nvim-dap-view-as-a-dependency-for-nvim-dap">Why?</a></p> <p>If you’re using a plugin that overrides the <code>'winbar'</code> option, make sure to disable it for <code>nvim-dap-view</code> <a href="filetypes-autocmds">buffers</a>.</p> <h2 id="features"><a href="#features">Features</a></h2> <p>The plugin provides 7 “views” (aka “sections”) that (mostly) share the same window (so there’s clutter)</p> <h3 id="watches-view"><a href="#watches-view">Watches view</a></h3> <img src="https://github.com/user-attachments/assets/381a5c9c-7eea-4cdc-8358-a2afe9f247b2" alt="watches view"/> <p>Shows a list of user defined expressions, that are evaluated by debug adapter</p> <ul><li>Basic CRUD operations for expressions</li> <li>Expand, collapse, copy or set the value of expressions and variables</li></ul> <h3 id="threads-view"><a href="#threads-view">Threads view</a></h3> <img src="https://i.ibb.co/CsNVQfzh/dap-view-threads.png" alt="threads view"/> <p>List all threads and their stack traces</p> <ul><li>Jump to a function in the call stack, switching the context to that call</li> <li>Toggle <code>subtle</code> (hidden) frames</li></ul> <h3 id="breakpoints-view"><a href="#breakpoints-view">Breakpoints view</a></h3> <img src="https://github.com/user-attachments/assets/b8c23809-2f23-4a39-8aef-b880f2b3eef9" alt="breakpoints view"/> <p>List all breakpoints with full syntax highlighting, including treesitter and semantic tokens</p> <h3 id="exceptions-view"><a href="#exceptions-view">Exceptions view</a></h3> <img src="https://github.com/user-attachments/assets/86edd829-d9d8-4fae-b0c0-8b79339b0c33" alt="exceptions view"/> <p>Control when the debugger should stop, outside of regular breakpoints (e.g., whenever an exception is thrown)</p> <h3 id="scopes-view"><a href="#scopes-view">Scopes view</a></h3> <img src="https://github.com/user-attachments/assets/2628ae8e-9224-4b2f-94c7-88e7800c232b" alt="scopes view"/> <p>Use the scopes widget provided by nvim-dap</p> <h3 id="repl-view"><a href="#repl-view">REPL view</a></h3> <img src="https://github.com/user-attachments/assets/43caeb02-ff9e-47ea-a4c1-ab5dd30d8a3c" alt="repl view"/> <p>Use REPL provided by nvim-dap</p> <h3 id="console-view"><a href="#console-view">Console view</a></h3> <p>You can also interact with the console (terminal), which is also provided by <code>nvim-dap</code>. By default, the console has its own window, but it can be configured to be shown with the other views. See details on the <a href="configuration">config</a> page.</p> <p>The console’s default height is resized to match your <code>nvim-dap-view</code> configuration. You can also either completely <a href="hide-terminal">hide</a> it (if it’s not being used at all, which is the case for some debug adapters) or hide it only during session initialization (which is nice when debugging tests, for instance).</p> <h3 id="control-bar"><a href="#control-bar">Control bar</a></h3> <p><code>nvim-dap-view</code> also provides a “non view” component: the control bar, which exposes some clickable buttons to control your session. It’s disabled by default. See details on how to enable and configure it <a href="control-bar">here</a>.</p> <img src="https://i.ibb.co/Hf6V22Hw/dapview-control-bar.png" alt="control bar"/> <h2 id="usage"><a href="#usage">Usage</a></h2> <p>Learn about <code>nvim-dap-view</code>’s <a href="commands">commands</a> and <a href="keymaps">keymaps</a> to get started. For a more advanced setup, see the <code>Recipes</code> section in the sidebar. If, on the other hand, you need help getting started with <code>nvim-dap</code>, you can read the <a href="basics">guide</a>.</p> <h2 id="customization"><a href="#customization">Customization</a></h2> <p><code>nvim-dap-view</code> is fully customizable! Visit the <a href="configuration">config</a> page to learn what you can do.</p>`,3);function F(s,t){const o=f(t,["children","$$slots","$$events","$$legacy"]);u(s,m(()=>o,()=>a,{children:(i,w)=>{var e=v(),n=p(l(e),12);h(n,()=>`<pre class="shiki catppuccin-mocha" style="background-color:#1e1e2e;color:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CBA6F7">return</span><span style="color:#CDD6F4"> &#123;</span></span>
<span class="line"><span style="color:#CDD6F4">    &#123;</span></span>
<span class="line"><span style="color:#A6E3A1">        "igorlfs/nvim-dap-view"</span><span style="color:#CDD6F4">,</span></span>
<span class="line"><span style="color:#6C7086;font-style:italic">        ---</span><span style="color:#CBA6F7">@module</span><span style="color:#A6E3A1"> '</span><span style="color:#A6E3A1;font-style:italic">dap-view</span><span style="color:#A6E3A1">'</span></span>
<span class="line"><span style="color:#6C7086;font-style:italic">        ---</span><span style="color:#CBA6F7">@type</span><span style="color:#F9E2AF;font-style:italic"> dapview.Config</span></span>
<span class="line"><span style="color:#CDD6F4">        opts </span><span style="color:#94E2D5">=</span><span style="color:#CDD6F4"> &#123;&#125;,</span></span>
<span class="line"><span style="color:#CDD6F4">    &#125;,</span></span>
<span class="line"><span style="color:#CDD6F4">&#125;</span></span></code></pre>`),d(68),c(i,e)},$$slots:{default:!0}}))}export{F as default,a as metadata};
