import{f as t,a as c}from"./BcDBk0ZM.js";import"./DxUuYnVR.js";import{s as r,f as i}from"./BRMmbz-l.js";import{h as y}from"./C8edfgHr.js";import{l as d,s as D}from"./Bjp0du-b.js";import{M as f}from"./ChyJE-Y7.js";const a={title:"Automatic Toggle",category:"Recipes"},{title:h,category:_}=a;var F=t("<p>If you find yourself constantly toggling <code>nvim-dap-view</code> once a session starts, and then closing it when the session ends, you might want to add the following snippet to your configuration, to do that automatically:</p> <!>",1);function $(n,o){const l=d(o,["children","$$slots","$$events","$$legacy"]);f(n,D(()=>l,()=>a,{children:(p,C)=>{var s=F(),e=r(i(s),2);y(e,()=>`<pre class="shiki catppuccin-mocha" style="background-color:#1e1e2e;color:#cdd6f4" tabindex="0"><code><span class="line"><span style="color:#CBA6F7">local</span><span style="color:#CDD6F4"> dap, dv </span><span style="color:#94E2D5">=</span><span style="color:#89B4FA;font-style:italic"> require</span><span style="color:#CDD6F4">(</span><span style="color:#A6E3A1">"dap"</span><span style="color:#CDD6F4">), </span><span style="color:#89B4FA;font-style:italic">require</span><span style="color:#CDD6F4">(</span><span style="color:#A6E3A1">"dap-view"</span><span style="color:#CDD6F4">)</span></span>
<span class="line"><span style="color:#CDD6F4">dap.listeners.before.attach[</span><span style="color:#A6E3A1">"dap-view-config"</span><span style="color:#CDD6F4">] </span><span style="color:#94E2D5">=</span><span style="color:#CBA6F7"> function</span><span style="color:#9399B2">()</span></span>
<span class="line"><span style="color:#CDD6F4">    dv.</span><span style="color:#89B4FA;font-style:italic">open</span><span style="color:#CDD6F4">()</span></span>
<span class="line"><span style="color:#CBA6F7">end</span></span>
<span class="line"><span style="color:#CDD6F4">dap.listeners.before.launch[</span><span style="color:#A6E3A1">"dap-view-config"</span><span style="color:#CDD6F4">] </span><span style="color:#94E2D5">=</span><span style="color:#CBA6F7"> function</span><span style="color:#9399B2">()</span></span>
<span class="line"><span style="color:#CDD6F4">    dv.</span><span style="color:#89B4FA;font-style:italic">open</span><span style="color:#CDD6F4">()</span></span>
<span class="line"><span style="color:#CBA6F7">end</span></span>
<span class="line"><span style="color:#CDD6F4">dap.listeners.before.event_terminated[</span><span style="color:#A6E3A1">"dap-view-config"</span><span style="color:#CDD6F4">] </span><span style="color:#94E2D5">=</span><span style="color:#CBA6F7"> function</span><span style="color:#9399B2">()</span></span>
<span class="line"><span style="color:#CDD6F4">    dv.</span><span style="color:#89B4FA;font-style:italic">close</span><span style="color:#CDD6F4">()</span></span>
<span class="line"><span style="color:#CBA6F7">end</span></span>
<span class="line"><span style="color:#CDD6F4">dap.listeners.before.event_exited[</span><span style="color:#A6E3A1">"dap-view-config"</span><span style="color:#CDD6F4">] </span><span style="color:#94E2D5">=</span><span style="color:#CBA6F7"> function</span><span style="color:#9399B2">()</span></span>
<span class="line"><span style="color:#CDD6F4">    dv.</span><span style="color:#89B4FA;font-style:italic">close</span><span style="color:#CDD6F4">()</span></span>
<span class="line"><span style="color:#CBA6F7">end</span></span></code></pre>`),c(p,s)},$$slots:{default:!0}}))}export{$ as default,a as metadata};
